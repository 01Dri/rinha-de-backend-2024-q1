 Network diego-coronel_default  Creating
 Network diego-coronel_default  Created
 Container postgres  Creating
 Container postgres  Created
 Container api2  Creating
 Container api1  Creating
 Container api2  Created
 Container api1  Created
 Container nginx  Creating
 Container nginx  Created
Attaching to api1, api2, nginx, postgres
postgres  | The files belonging to this database system will be owned by user "postgres".
postgres  | This user must also own the server process.
postgres  | 
postgres  | The database cluster will be initialized with locale "en_US.utf8".
postgres  | The default database encoding has accordingly been set to "UTF8".
postgres  | The default text search configuration will be set to "english".
postgres  | 
postgres  | Data page checksums are disabled.
postgres  | 
postgres  | fixing permissions on existing directory /var/lib/postgresql/data ... ok
postgres  | creating subdirectories ... ok
postgres  | selecting dynamic shared memory implementation ... posix
postgres  | selecting default max_connections ... 100
postgres  | selecting default shared_buffers ... 128MB
postgres  | selecting default time zone ... Etc/UTC
postgres  | creating configuration files ... ok
postgres  | running bootstrap script ... ok
nginx     | /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
nginx     | /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
nginx     | /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
nginx     | 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
nginx     | 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
nginx     | /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
nginx     | /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
nginx     | /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
nginx     | /docker-entrypoint.sh: Configuration complete; ready for start up
postgres  | performing post-bootstrap initialization ... ok
postgres  | initdb: warning: enabling "trust" authentication for local connections
postgres  | initdb: hint: You can change this by editing pg_hba.conf or using the option -A, or --auth-local and --auth-host, the next time you run initdb.
postgres  | syncing data to disk ... ok
postgres  | 
postgres  | 
postgres  | Success. You can now start the database server using:
postgres  | 
postgres  |     pg_ctl -D /var/lib/postgresql/data -l logfile start
postgres  | 
postgres  | waiting for server to start.... done
postgres  | server started
postgres  | CREATE DATABASE
postgres  | 
postgres  | 
postgres  | /usr/local/bin/docker-entrypoint.sh: running /docker-entrypoint-initdb.d/init.sql
postgres  | CREATE TABLE
postgres  | CREATE TABLE
postgres  | CREATE INDEX
postgres  | CREATE INDEX
postgres  | INSERT 0 1
postgres  | INSERT 0 1
postgres  | INSERT 0 1
postgres  | INSERT 0 1
postgres  | INSERT 0 1
postgres  | 
postgres  | 
postgres  | waiting for server to shut down.... done
postgres  | server stopped
postgres  | 
postgres  | PostgreSQL init process complete; ready for start up.
postgres  | 
nginx exited with code 0
nginx exited with code 0
api2      | __  ____  __  _____   ___  __ ____  ______ 
api2      |  --/ __ \/ / / / _ | / _ \/ //_/ / / / __/ 
api2      |  -/ /_/ / /_/ / __ |/ , _/ ,< / /_/ /\ \   
api2      | --\___\_\____/_/ |_/_/|_/_/|_|\____/___/   
api1      | __  ____  __  _____   ___  __ ____  ______ 
api1      |  --/ __ \/ / / / _ | / _ \/ //_/ / / / __/ 
api1      |  -/ /_/ / /_/ / __ |/ , _/ ,< / /_/ /\ \   
api1      | --\___\_\____/_/ |_/_/|_/_/|_|\____/___/   
api2 exited with code 0
api2 exited with code 143
api1 exited with code 0
api1 exited with code 143
postgres exited with code 0
